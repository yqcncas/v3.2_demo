{"version":3,"sources":["webpack:///./src/api/permission.js","webpack:///./src/utils/i18.js","webpack:///./src/api/role.js","webpack:///./src/views/role-list/components/rolesTree.vue","webpack:///./src/views/role-list/components/rolesTree.vue?2e71","webpack:///./src/views/role-list/index.vue","webpack:///./src/views/role-list/index.vue?c262"],"names":["permissionList","request","url","watchSwitchLang","cbs","watch","store","getters","lang","forEach","cb","roleList","rolePermission","roleId","distributePermission","data","method","i18n","treeRef","treeProps","children","label","defaultCheckKeys","onClose","value","emits","onConfirm","props","permissions","getCheckedKeys","success","t","getRolePermission","role","val","getPermissionList","allPermission","permission","__exports__","allRoles","getRoleList","dialogVisible","onDistributePermissionClick","row","id"],"mappings":"6GAAA,kDAKaA,EAAiB,WAC5B,OAAOC,eAAQ,CACbC,IAAK,uB,oHCLF,SAASC,IAAwB,2BAALC,EAAK,yBAALA,EAAK,gBACtCC,oBACE,kBAAMC,OAAMC,QAAQC,QACpB,WACEJ,EAAIK,SAAQ,SAAAC,GAAE,OAAIA,EAAGJ,OAAMC,QAAQC,c,kCCNzC,sHAKaG,EAAW,WACtB,OAAOV,eAAQ,CACbC,IAAK,gBAOIU,EAAiB,SAAAC,GAC5B,OAAOZ,eAAQ,CACbC,IAAK,oBAAF,OAAsBW,MAOhBC,EAAuB,SAAAC,GAClC,OAAOd,eAAQ,CACbC,IAAK,8BACLc,OAAQ,OACRD,W,wUCQEE,EAAO,iBAYPC,EAAU,iBAAI,MACdC,EAAY,iBAAI,CACpBC,SAAU,WACVC,MAAO,mBAEHC,EAAmB,iBAAI,IAGvBC,EAAU,WACdD,EAAiBE,MAAQ,GACzBC,EAAM,qBAAqB,IAEvBC,EAAS,yDAAG,8GACV,eAAqB,CACzBb,OAAQc,EAAMd,OACde,YAAaV,EAAQM,MAAMK,mBAHb,OAKhB,OAAUC,QAAQb,EAAKc,EAAE,2BACzBR,IANgB,2CAAH,qDAQTS,EAAiB,yDAAG,8GACO,OAAAC,EAAA,MAAeN,EAAMd,QAD5B,OACxBS,EAAiBE,MADO,kDAAH,qDAGvB,oBACE,kBAAMG,EAAMd,UACZ,SAACqB,GACKA,IACFC,IACAH,QAMN,IAAMI,EAAgB,iBAAI,IACpBD,EAAiB,yDAAG,8GACI,OAAAE,EAAA,QADJ,OACxBD,EAAcZ,MADU,kDAAH,qD,OAIvB,eAAgBW,G,mlCCnFhB,MAAMG,EAAc,EAEL,Q,qBCyBf,IAAMC,EAAW,iBAAI,IACfC,EAAW,yDAAG,8GACK,OAAAP,EAAA,QADL,OAClBM,EAASf,MADS,kDAAH,qDAGjBgB,IACA,eAAgBA,GAChB,IAAMC,EAAgB,kBAAI,GACpB5B,EAAS,iBAAI,IACb6B,EAA8B,SAACC,GACnC9B,EAAOW,MAAQmB,EAAIC,GACnBH,EAAcjB,OAAQ,G,u0CCrCxB,MAAM,EAAc,EAEL","file":"js/role-list.ec91e312.js","sourcesContent":["import request from './netWork'\n\n/**\n * 获取所有权限\n */\nexport const permissionList = () => {\n  return request({\n    url: '/permission/list'\n  })\n}\n","import { watch } from 'vue'\nimport store from '@/store'\nexport function watchSwitchLang(...cbs) {\n  watch(\n    () => store.getters.lang,\n    () => {\n      cbs.forEach(cb => cb(store.getters.lang))\n    }\n  )\n}\n","import request from './netWork'\n\n/**\n * 获取所有角色\n */\nexport const roleList = () => {\n  return request({\n    url: '/role/list'\n  })\n}\n\n/**\n * 获取指定角色的权限\n */\nexport const rolePermission = roleId => {\n  return request({\n    url: `/role/permission/${roleId}`\n  })\n}\n\n/**\n * 为角色修改权限\n */\nexport const distributePermission = data => {\n  return request({\n    url: '/role/distribute-permission',\n    method: 'POST',\n    data\n  })\n}\n","<template>\n  <el-dialog\n    :model-value=\"dialogVisible\"\n    :title=\"$t('excel.roleDialogTitle')\"\n    width=\"30%\"\n    @close=\"onClose\"\n  >\n    <el-tree\n      ref=\"treeRef\"\n      :props=\"treeProps\"\n      show-checkbox\n      check-strictly\n      default-expand-all\n      :data=\"allPermission\"\n      node-key=\"id\"\n      :default-checked-keys=\"defaultCheckKeys\"\n    />\n    <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button @click=\"onClose\">{{ $t('universal.cancel') }}</el-button>\n        <el-button type=\"primary\" @click=\"onConfirm\">{{\n          $t('universal.confirm')\n        }}</el-button>\n      </span>\n    </template>\n  </el-dialog>\n</template>\n\n<script setup>\nimport { defineProps, defineEmits, watch, ref } from 'vue'\nimport { rolePermission, distributePermission } from '@/api/role'\nimport { permissionList } from '@/api/permission'\nimport { watchSwitchLang } from '@/utils/i18.js'\nimport { ElMessage } from 'element-plus'\nimport { useI18n } from 'vue-i18n'\nconst i18n = useI18n()\nconst props = defineProps({\n  dialogVisible: {\n    type: Boolean,\n    default: false,\n    required: true\n  },\n  roleId: {\n    type: String,\n    required: true\n  }\n})\nconst treeRef = ref(null)\nconst treeProps = ref({\n  children: 'children',\n  label: 'permissionName'\n})\nconst defaultCheckKeys = ref([])\nconst emits = defineEmits(['update:modelValue'])\n\nconst onClose = () => {\n  defaultCheckKeys.value = []\n  emits('update:modelValue', false)\n}\nconst onConfirm = async () => {\n  await distributePermission({\n    roleId: props.roleId,\n    permissions: treeRef.value.getCheckedKeys()\n  })\n  ElMessage.success(i18n.t('role.updateRoleSuccess'))\n  onClose()\n}\nconst getRolePermission = async () => {\n  defaultCheckKeys.value = await rolePermission(props.roleId)\n}\nwatch(\n  () => props.roleId,\n  (val) => {\n    if (val) {\n      getPermissionList()\n      getRolePermission()\n    }\n  }\n)\n\n// 所有权限\nconst allPermission = ref([])\nconst getPermissionList = async () => {\n  allPermission.value = await permissionList()\n}\n\nwatchSwitchLang(getPermissionList)\n</script>\n\n<style lang=\"scss\" scoped></style>\n","import script from \"./rolesTree.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./rolesTree.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <el-table :data=\"allRoles\" stripe border style=\"width: 100%\">\n    <el-table-column type=\"index\" width=\"50\" />\n    <el-table-column :label=\"$t('role.name')\" prop=\"title\"> </el-table-column>\n    <el-table-column :label=\"$t('role.desc')\" prop=\"describe\">\n    </el-table-column>\n    <el-table-column\n      :label=\"$t('role.action')\"\n      prop=\"action\"\n      width=\"260\"\n      #default=\"{ row }\"\n    >\n      <el-button\n        type=\"primary\"\n        size=\"mini\"\n        @click=\"onDistributePermissionClick(row)\"\n        v-permission=\"['distributePermission']\"\n      >\n        {{ $t('role.assignPermissions') }}\n      </el-button>\n    </el-table-column>\n  </el-table>\n  <roles-tree v-model=\"dialogVisible\" :roleId=\"roleId\" />\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { roleList } from '@/api/role'\nimport { watchSwitchLang } from '@/utils/i18.js'\nimport RolesTree from './components/rolesTree.vue'\nconst allRoles = ref([])\nconst getRoleList = async () => {\n  allRoles.value = await roleList()\n}\ngetRoleList()\nwatchSwitchLang(getRoleList)\nconst dialogVisible = ref(false)\nconst roleId = ref('')\nconst onDistributePermissionClick = (row) => {\n  roleId.value = row.id\n  dialogVisible.value = true\n}\n</script>\n\n<style lang=\"scss\" scoped></style>\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"sourceRoot":""}